#!/usr/bin/env python3
#
# Copyright (C) 2016 James Murphy
# Licensed under the GPL version 2 only
#
# A battery indicator blocklet script for i3blocks

# edited by abxh

import os
import re
from subprocess import check_output


def notify_warning():
    tag = "string:x-dunst-stack-tag:battery"
    icon = "/usr/share/icons/Gruvbox-Material-Dark-OneColored/16x16/panel/battery-010.svg"

    os.system(
        f"dunstify -h {tag} -u critical -i {icon}"
        + " Warning"
        + " 'Battery is getting low!'"
    )

status = check_output(["acpi"], universal_newlines=True)

if not status:
    # stands for no battery found
    fulltext = "<span font='FontAwesome'>\uf00d \uf240</span>"
    percentleft = 100
else:
    # if there is more than one battery in one laptop, the percentage left is
    # available for each battery separately, although state and remaining
    # time for overall block is shown in the status of the first battery
    battery = status.strip()
    state_batteries = []
    commasplitstatus_batteries = []
    percentleft_batteries = []

    time = ""
    state_batteries.append(battery.split(": ")[1].split(", ")[0])
    commasplitstatus = battery.split(", ")

    if not time:
        time = commasplitstatus[-1].strip()
        # check if it matches a time
        time = re.match(r"(\d+):(\d+)", time)
        if time:
            time = ":".join(time.groups())
            timeleft = " ({})".format(time)
        else:
            timeleft = ""

    p = int(commasplitstatus[1].rstrip("%\n"))
    if p > 0:
        percentleft_batteries.append(p)
    commasplitstatus_batteries.append(commasplitstatus)

    state = state_batteries[0]
    commasplitstatus = commasplitstatus_batteries[0]

    if percentleft_batteries:
        percentleft = int(sum(percentleft_batteries) / len(percentleft_batteries))
    else:
        percentleft = 0

    # stands for charging
    FA_LIGHTNING = "<span font='FontAwesome'>\uf0e7</span>"

    # stands for battery
    FA_BATTERY = ""

    # stands for plugged in
    FA_PLUG = "<span font='FontAwesome'>\uf1e6</span>"

    # stands for unknown status of battery
    FA_QUESTION = "<span font='FontAwesome'>\uf128</span>"

    if state == "Discharging":
        if percentleft < 25:
            FA_BATTERY = ""
        elif percentleft < 50:
            FA_BATTERY = ""
        elif percentleft < 75:
            FA_BATTERY = ""
        elif percentleft < 99:
            FA_BATTERY = ""
        else:
            FA_BATTERY = ""
        fulltext = FA_BATTERY + " "
    elif state == "Full":
        fulltext = FA_PLUG + " "
        timeleft = ""
    elif state == "Unknown":
        fulltext = FA_QUESTION + " " + FA_BATTERY + " "
        timeleft = ""
    else:
        fulltext = FA_LIGHTNING + " " + FA_PLUG + " "

    form = " {}%"
    fulltext += form.format(percentleft)
    fulltext += timeleft

print(fulltext)

if percentleft < 10 and state == "Discharging":
    notify_warning()
    exit(33)
